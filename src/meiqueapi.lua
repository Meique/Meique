"function AbortIf(var, message, level)\n"
"    if var then\n"
"       error(message, level)\n"
"    end\n"
"end\n"
"-- Simple target\n"
"Target = { }\n"
"_meiqueAllTargets = {}\n"
"\n"
"function Target:new(name)\n"
"    AbortIf(name == nil and name ~= Target, \"Target name can't be nil\")\n"
"    o = {}\n"
"    setmetatable(o, Target)\n"
"    Target.__index = Target\n"
"    o._files = {}\n"
"    o._name = name\n"
"    _meiqueAllTargets[name] = o\n"
"    return o\n"
"end\n"
"\n"
"function Target:addFiles(...)\n"
"    for i,file in ipairs(arg) do\n"
"        table.insert(self._files, file)\n"
"    end\n"
"end\n"
"\n"
"-- Custom target\n"
"CustomTarget = Target:new(Target)\n"
"\n"
"function CustomTarget:new(name, func)\n"
"    o = Target:new(name)\n"
"    setmetatable(o, self)\n"
"    self.__index = self\n"
"    o._func = func\n"
"    return o\n"
"end\n"
"\n"
"-- Compilable target\n"
"CompilableTarget = Target:new(Target)\n"
"\n"
"function CompilableTarget:new(name)\n"
"    o = Target:new(name)\n"
"    setmetatable(o, self)\n"
"    self.__index = self\n"
"    o._incDirs = {}\n"
"    o._libDirs = {}\n"
"    o._linkLibraries = {}\n"
"    return o\n"
"end\n"
"\n"
"function CompilableTarget:addIncludeDirs(...)\n"
"    for i,file in ipairs(arg) do\n"
"        table.insert(self._incDirs, file)\n"
"    end\n"
"end\n"
"\n"
"function CompilableTarget:addLibIncludeDirs(...)\n"
"    for i,file in ipairs(arg) do\n"
"        table.insert(self._libDirs, file)\n"
"    end\n"
"end\n"
"\n"
"function CompilableTarget:addLinkLibraries(...)\n"
"    for i,file in ipairs(arg) do\n"
"        table.insert(self._linkLibraries, file)\n"
"    end\n"
"end\n"
"\n"
"-- Executable\n"
"Executable = CompilableTarget:new(Target)\n"
"\n"
"SHARED = 1\n"
"STATIC = 2\n"
"-- Library\n"
"Library = CompilableTarget:new(Target)\n"
"function Library:new(name, flags)\n"
"    o = CompilableTarget:new(name)\n"
"    setmetatable(o, self)\n"
"    self.__index = self\n"
"    o._flags = flags\n"
"    return o\n"
"end\n"
"\n"
"_meiqueOptions = {}\n"
"function AddOption(name, description, defaultValue)\n"
"    AbortIf(name, \"An option can't have a nil name\")\n"
"    _meiqueOptions[name] = {description, defaultValue}\n"
"end\n"
"\n"
"a = Library:new(2)\n"
"a.addFiles(\"oi2\")\n"
"\n"